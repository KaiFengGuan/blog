(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{602:function(t,a,s){"use strict";s.r(a);var n=s(10),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("JavaScript是解释性语言，运行时是编译一行执行一行，但js并非上来就进入编译环节，它在编译之前存在预编译过程。预编译分为全局预编译和函数预编译。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("预编译发生的时间")]),s("p",[t._v("JavaScript预编译发生在"),s("strong",[t._v("代码片段执行前")]),t._v("的几微秒（甚至更短！），预编译分为两种，一种是函数预编译，另一种是全局预编译，全局预编译发生在页面加载完成时执行，函数预编译发生在函数执行的前一刻。"),s("br"),t._v(" "),s("strong",[t._v("预编译会创建当前环境的执行期上下文。")])])]),s("h2",{attrs:{id:"_1-全局预编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-全局预编译"}},[t._v("#")]),t._v(" 1 全局预编译")]),t._v(" "),s("h3",{attrs:{id:"_1-1-全局预编译步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-全局预编译步骤"}},[t._v("#")]),t._v(" 1.1 全局预编译步骤")]),t._v(" "),s("ol",[s("li",[t._v("创建GO对象（Global Object，全局执行期上下文，根据ECMAScript实现的宿主环境不同而不同，在浏览器中为window对象）；")]),t._v(" "),s("li",[t._v("寻找var变量声明，并赋值为undefined；")]),t._v(" "),s("li",[t._v("寻找function函数声明，并赋值为函数体；")]),t._v(" "),s("li",[t._v("执行代码。")])]),t._v(" "),s("h2",{attrs:{id:"_2-函数预编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数预编译"}},[t._v("#")]),t._v(" 2 函数预编译")]),t._v(" "),s("h3",{attrs:{id:"_2-1-函数预编译步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-函数预编译步骤"}},[t._v("#")]),t._v(" 2.1 函数预编译步骤")]),t._v(" "),s("ol",[s("li",[t._v("创建AO对象（Activate Object，函数执行期上下文）；")]),t._v(" "),s("li",[t._v("寻找形参和var变量声明，并将形参名和变量名作为AO的属性名，赋值为undefined；")]),t._v(" "),s("li",[t._v("形参和实参相统一，将实参的值赋给形参；")]),t._v(" "),s("li",[t._v("寻找函数内部的function函数声明，将函数名赋值给AO属性名，值为函数体；")]),t._v(" "),s("li",[t._v("执行函数。")])]),t._v(" "),s("p",[t._v("在函数执行期上下文中进行变量查找时，首先会在当前作用域的AO中查找，查找不到再在外部作用域的AO中查找，一直延续到全局执行环境，这个被称为作用域链。这里涉及到两个内容：作用域与作用域链和执行期上下文。")]),t._v(" "),s("h2",{attrs:{id:"_3-作用域与作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-作用域与作用域链"}},[t._v("#")]),t._v(" 3 作用域与作用域链")]),t._v(" "),s("p",[t._v("作用域也分全局作用域和函数作用域。作用域就是一个独立的地盘，让变量不会外泄、暴露出去。也就是说作用域最大的用处就是隔离变量，不同作用域下同名变量不会有冲突。")]),t._v(" "),s("blockquote",[s("p",[t._v("ES6新增了块级作用域（在函数内部或"),s("code",[t._v("{}")]),t._v("包裹的代码块内部创建），在块级作用域内通过新增命令let和const声明变量，并且这些变量不会存在变量提升，也不允许重复声明。")])]),t._v(" "),s("p",[t._v("我们知道，函数也是一种对象类型，在对象内部，有些属性是我们无法访问的，这些是JS引擎内部固有的隐式属性。作用域中涉及到一个隐式属性为 "),s("code",[t._v("[[scope]]")]),t._v(" ，它是函数创建时生成的一个JS内部的隐式属性，是函数存储函数作用域链的容器，作用域链中则保存了AO/GO（执行期上下文）。")]),t._v(" "),s("p",[t._v("一个示例：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("则上面函数执行过程中，作用域与作用域链的执行过程如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202201081520539.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202201081521912.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202201081526290.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202201081535365.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202201081535090.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202201081540642.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202201081535498.png",alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202201081542287.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_4-执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-执行上下文"}},[t._v("#")]),t._v(" 4 执行上下文")]),t._v(" "),s("h3",{attrs:{id:"_4-1-执行上下文分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-执行上下文分类"}},[t._v("#")]),t._v(" 4.1 执行上下文分类")]),t._v(" "),s("p",[t._v("前面提到，预编译会创建当前环境的执行上下文。执行上下文主要分为三类：全局执行上下文、函数执行上下文、eval函数执行上下文。")]),t._v(" "),s("ol",[s("li",[t._v("全局执行上下文：当JavaScript执行全局代码的时候，会编译全局代码并创建全局执行上下文，而且在整个页面的生存周期内，全局执行上下文只有一份。")]),t._v(" "),s("li",[t._v("函数执行上下文：当调用一个函数的时候，函数体内的代码会被编译，并创建函数执行上下文，一般情况下，函数执行结束之后，创建的函数执行上下文会被销毁。")]),t._v(" "),s("li",[t._v("eval执行上下文：当使用eval函数的时候，eval代码也会被编译，并创建执行上下文。")])]),t._v(" "),s("h3",{attrs:{id:"_4-2-执行上下文内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-执行上下文内容"}},[t._v("#")]),t._v(" 4.2 执行上下文内容")]),t._v(" "),s("p",[t._v("在一个执行上下文中，最重要的三个属性分别是"),s("strong",[t._v("变量对象（Variable Object）")]),t._v("、"),s("strong",[t._v("作用域链（Scope Chain）"),s("strong",[t._v("和 "),s("strong",[t._v("this 指向")]),t._v("。一个执行上下文的生命周期分为")]),t._v("创建")]),t._v("和"),s("strong",[t._v("执行")]),t._v("两个阶段：")]),t._v(" "),s("ul",[s("li",[t._v("创建阶段主要是生成变量对象（GO/AO），建立作用域链（scope chain）和确定this指向；")]),t._v(" "),s("li",[t._v("执行阶段主要工作是变量赋值和执行其他代码。")])]),t._v(" "),s("h3",{attrs:{id:"_4-3-代码执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-代码执行过程"}},[t._v("#")]),t._v(" 4.3 代码执行过程")]),t._v(" "),s("ul",[s("li",[t._v("创建 全局上下文 (global EC)。将其压入栈底；")]),t._v(" "),s("li",[t._v("全局执行上下文 (caller) 逐行 "),s("strong",[t._v("自上而下")]),t._v(" 执行。遇到函数时，函数执行上下文 (callee) 被push到执行栈顶层；")]),t._v(" "),s("li",[t._v("函数执行上下文被激活，成为 active EC, 开始执行函数中的代码，caller 被挂起；")]),t._v(" "),s("li",[t._v("函数执行完后，callee 被pop移除出执行栈，控制权交还全局上下文 (caller)，继续执行；")])]),t._v(" "),s("br"),t._v(" "),s("br"),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("参考资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.bilibili.com/video/BV1x441167iH",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript深度指南"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("《JavaScript高级程序设计（第3版）》")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6966625151261605918",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端百题斩【010】——通俗易懂的JavaScript执行上下文"),s("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=r.exports}}]);