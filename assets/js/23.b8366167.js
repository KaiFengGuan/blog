(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{581:function(t,s,a){"use strict";a.r(s);var _=a(10),v=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Cross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。")]),t._v(" "),a("p",[t._v("攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全。为了和 CSS 区分，这里把攻击的第一个字母改成了 X，于是叫做 XSS。")]),t._v(" "),a("p",[t._v("XSS 的本质是："),a("strong",[t._v("恶意代码未经过滤，与网站正常的代码混在一起")]),t._v("；浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行。而由于直接在用户的终端执行，恶意代码"),a("strong",[t._v("能够直接获取用户的信息")]),t._v("，或者利用这些信息冒充用户向网站发起攻击者定义的请求。")]),t._v(" "),a("p",[t._v("在部分情况下，由于输入的限制，注入的恶意脚本比较短。但可以通过引入外部的脚本，并由浏览器执行，来完成比较复杂的攻击策略。")]),t._v(" "),a("p",[t._v("在处理输入时，以下内容都不可信：")]),t._v(" "),a("ul",[a("li",[t._v("来自用户的 UGC 信息")]),t._v(" "),a("li",[t._v("来自第三方的链接")]),t._v(" "),a("li",[t._v("URL 参数")]),t._v(" "),a("li",[t._v("POST 参数")]),t._v(" "),a("li",[t._v("Referer （可能来自不可信的来源）")]),t._v(" "),a("li",[t._v("Cookie （可能来自其他子域注入）")])]),t._v(" "),a("h2",{attrs:{id:"_1-xss分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-xss分类"}},[t._v("#")]),t._v(" 1 XSS分类")]),t._v(" "),a("p",[t._v("根据攻击的来源，XSS 攻击可分为存储型、反射型和 DOM 型三种。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("存储区")]),t._v(" "),a("th",[t._v("插入点")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("存储型XSS")]),t._v(" "),a("td",[t._v("后端数据库")]),t._v(" "),a("td",[t._v("HTML")])]),t._v(" "),a("tr",[a("td",[t._v("反射性XSS")]),t._v(" "),a("td",[t._v("URL")]),t._v(" "),a("td",[t._v("HTML")])]),t._v(" "),a("tr",[a("td",[t._v("DOM型XSS")]),t._v(" "),a("td",[t._v("后端数据库/前端存储/URL")]),t._v(" "),a("td",[t._v("前端 JavaScript")])])])]),t._v(" "),a("ul",[a("li",[t._v("存储区：恶意代码存放的位置。")]),t._v(" "),a("li",[t._v("插入点：由谁取得恶意代码，并插入到网页上。")])]),t._v(" "),a("h3",{attrs:{id:"_1-1-存储型xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-存储型xss"}},[t._v("#")]),t._v(" 1.1 存储型XSS")]),t._v(" "),a("p",[t._v("攻击步骤：")]),t._v(" "),a("ol",[a("li",[t._v("攻击者将恶意代码提交到目标网站的数据库中。")]),t._v(" "),a("li",[t._v("用户打开目标网站时，网站服务端将恶意代码从数据库取出，拼接在 HTML 中返回给浏览器。")]),t._v(" "),a("li",[t._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),a("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),a("p",[t._v("存储型XSS攻击危害最大，对全部用户可见，且攻击次数不止一次，被攻击的人不止一个，影响范围大。常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-反射型xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-反射型xss"}},[t._v("#")]),t._v(" 1.2 反射型XSS")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/48074c6f85344a84b1a33f1982ce6cde~tplv-k3u1fbpfcp-watermark.awebp?",alt:""}})]),t._v(" "),a("p",[t._v("攻击步骤：")]),t._v(" "),a("ol",[a("li",[t._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),a("li",[t._v("用户打开带有恶意代码的 URL 时，网站服务端将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。")]),t._v(" "),a("li",[t._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),a("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),a("p",[t._v("反射型XSS常见于通过 URL 传递参数的功能，如网站搜索、跳转等，这样就需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击。另外，POST的内容也可以触发反射型XSS，但其触发条件比较苛刻（需要构造表单提交页面，并引导用户点击），所以非常少见。")]),t._v(" "),a("blockquote",[a("p",[t._v("反射型 XSS 跟存储型 XSS 的区别是：")]),t._v(" "),a("p",[t._v("存储型 XSS 的恶意代码存在数据库里，反射型 XSS 的恶意代码存在 URL 里。")])]),t._v(" "),a("h3",{attrs:{id:"_1-3-dom型xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-dom型xss"}},[t._v("#")]),t._v(" 1.3 DOM型XSS")]),t._v(" "),a("p",[t._v("攻击步骤：")]),t._v(" "),a("ol",[a("li",[t._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),a("li",[t._v("用户打开带有恶意代码的 URL。")]),t._v(" "),a("li",[t._v("用户浏览器接收到响应后解析执行，前端 JavaScript 取出 URL 中的恶意代码并执行。")]),t._v(" "),a("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),a("blockquote",[a("p",[t._v("DOM 型 XSS 跟前两种的区别：")]),t._v(" "),a("p",[t._v("DOM 型 XSS 攻击中，取出和执行恶意代码"),a("strong",[t._v("由浏览器端完成")]),t._v("，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。")])]),t._v(" "),a("h2",{attrs:{id:"_2-xss预防措施"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-xss预防措施"}},[t._v("#")]),t._v(" 2 XSS预防措施")]),t._v(" "),a("p",[t._v("XSS预防具有两大要素：")]),t._v(" "),a("ul",[a("li",[t._v("攻击者提交恶意代码。应对措施："),a("strong",[t._v("对输入进行过滤")]),t._v("，但是不太可行。\n"),a("ul",[a("li",[t._v("攻击者可以绕过前端，直接构造请求")]),t._v(" "),a("li",[t._v("提交阶段，我们不确定内容要输出到哪里（显示？计算？）")]),t._v(" "),a("li",[t._v("但对于明确输入的内容（数字、URL、电话、邮件地址等），进行输入过滤还是有必要的")])])]),t._v(" "),a("li",[t._v("浏览器执行恶意代码。应对措施：\n"),a("ul",[a("li",[t._v("防止 HTML 中出现注入。")]),t._v(" "),a("li",[t._v("防止 JavaScript 执行时，执行恶意代码。")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-1-预防存储型和反射型xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-预防存储型和反射型xss"}},[t._v("#")]),t._v(" 2.1 预防存储型和反射型XSS")]),t._v(" "),a("p",[t._v("存储型和反射型 XSS 都是在服务端取出恶意代码后，插入到响应 HTML 里的，攻击者刻意编写的“数据”被内嵌到“代码”中，被浏览器所执行。预防这两种漏洞，有两种常见做法：纯前端渲染和HTML转义。")]),t._v(" "),a("h4",{attrs:{id:"_1-纯前端渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-纯前端渲染"}},[t._v("#")]),t._v(" 1. 纯前端渲染")]),t._v(" "),a("p",[t._v("纯前端渲染可以把代码和数据分隔开。其过程为：浏览器先加载一个静态 HTML，此 HTML 中不包含任何跟业务相关的数据；然后浏览器执行 HTML 中的 JavaScript；JavaScript 通过 Ajax 加载业务数据，调用 DOM API 更新到页面上。")]),t._v(" "),a("ul",[a("li",[t._v("明确的告诉浏览器需要渲染的内容（是文本"),a("code",[t._v(".innerText")]),t._v("，还是属性"),a("code",[t._v(".setAttribute")]),t._v("，还是样式"),a("code",[t._v(".style")]),t._v("等），不会轻易被骗而执行预期外的代码")]),t._v(" "),a("li",[t._v("需注意避免 DOM 型 XSS 漏洞（例如 "),a("code",[t._v("onload")]),t._v(" 事件和 "),a("code",[t._v("href")]),t._v(" 中的 "),a("code",[t._v("javascript:xxx")]),t._v(" 等）")]),t._v(" "),a("li",[t._v("纯前端渲染适合很多内部管理系统，但对于性能要求高，或有 SEO 需求的页面，我们仍然要面对拼接 HTML 的问题。")])]),t._v(" "),a("h4",{attrs:{id:"_2-对-html-做充分转义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-对-html-做充分转义"}},[t._v("#")]),t._v(" 2. 对 HTML 做充分转义")]),t._v(" "),a("p",[t._v("如果拼接 HTML 是必要的，就需要采用合适的转义库，对 HTML 模板各处插入点进行充分的转义。")]),t._v(" "),a("ul",[a("li",[t._v("要使用更完善更细致的转义策略，在不同的上下文里要使用相应的转义规则（HTML编码非常复杂）")]),t._v(" "),a("li",[t._v("采用了错误的转义规则，很有可能会埋下 XSS 隐患。")]),t._v(" "),a("li",[t._v("应当尽量避免自己写转义库，而应当采用成熟的、业界通用的转义库。")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-预防dom型xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-预防dom型xss"}},[t._v("#")]),t._v(" 2.2 预防DOM型XSS")]),t._v(" "),a("p",[t._v("DOM 型 XSS 攻击，实际上就是网站前端 JavaScript 代码本身不够严谨，把不可信的数据当作代码执行了。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在使用 "),a("code",[t._v(".innerHTML")]),t._v("、"),a("code",[t._v(".outerHTML")]),t._v("、"),a("code",[t._v("document.write()")]),t._v(" 时要特别小心，不要把不可信的数据作为 HTML 插到页面上，而应尽量使用 "),a("code",[t._v(".textContent")]),t._v("、"),a("code",[t._v(".setAttribute()")]),t._v(" 等。")])]),t._v(" "),a("li",[a("p",[t._v("使用 Vue/React 技术栈并不使用"),a("code",[t._v("v-html")]),t._v("/"),a("code",[t._v("dangerouslySetInnerHTML")]),t._v("功能，就能防御XSS。")])]),t._v(" "),a("li",[a("p",[t._v("DOM 中的内联事件监听器、"),a("code",[t._v("<a>")]),t._v(" 标签的 href 属性、JavaScript 的 "),a("code",[t._v("eval()")]),t._v("、"),a("code",[t._v("setTimeout()")]),t._v("、"),a("code",[t._v("setInterval()")]),t._v(" 等，都能把字符串作为代码运行。应避免将不可信的数据拼接到字符串中传递给这些API。")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 内联事件监听器中包含恶意代码 --\x3e")]),t._v("\n![](https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/3e724ce0.data:image/png,)\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 链接内包含恶意代码 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("UNTRUSTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setTimeout()/setInterval() 中调用恶意代码")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UNTRUSTED"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UNTRUSTED"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// location 调用恶意代码")]),t._v("\n    location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'UNTRUSTED'")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eval() 中调用恶意代码")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UNTRUSTED"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-3-其他的xss防范措施-通用方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-其他的xss防范措施-通用方案"}},[t._v("#")]),t._v(" 2.3 其他的XSS防范措施（通用方案）")]),t._v(" "),a("h4",{attrs:{id:"_1-content-security-policy-csp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-content-security-policy-csp"}},[t._v("#")]),t._v(" 1. Content Security Policy（CSP）")]),t._v(" "),a("p",[t._v("CSP全称内容安全策略（Content Security Policy），是一个额外的安全层，用于检测并削弱某些特定类型的攻击，包括XSS和数据注入攻击等。严格的 CSP 在 XSS 的防范中可以起到以下的作用：")]),t._v(" "),a("ul",[a("li",[t._v("禁止加载外域代码，防止复杂的攻击逻辑。")]),t._v(" "),a("li",[t._v("禁止外域提交，网站被攻击后，用户的数据不会泄露到外域。")]),t._v(" "),a("li",[t._v("禁止内联脚本执行（规则较严格，目前发现 GitHub 使用）。")]),t._v(" "),a("li",[t._v("禁止未授权的脚本执行（新特性，Google Map 移动版在使用）。")]),t._v(" "),a("li",[t._v("合理使用上报可以及时发现 XSS，利于尽快修复问题。")])]),t._v(" "),a("p",[t._v("使用CSP指定策略来判断哪些源（域名）被认为是安全的，来自安全源的脚本可以执行，否则直接抛出错误，禁止eval和inline script等。")]),t._v(" "),a("ul",[a("li",[t._v("在服务器头部设置：")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Content-Security-Policy: script-src "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'self'")]),t._v("\nContent-Security-Policy: script-src "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'self'")]),t._v(" https://domain.com\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("在浏览器页面的meta设置：")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(" Content-Security-Policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script-src self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"_2-输入内容长度控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-输入内容长度控制"}},[t._v("#")]),t._v(" 2. 输入内容长度控制")]),t._v(" "),a("p",[t._v("对于不受信任的输入，都应该限定一个合理的长度。虽然无法完全防止 XSS 发生，但可以增加 XSS 攻击的难度。")]),t._v(" "),a("h4",{attrs:{id:"_3-其他安全措施"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-其他安全措施"}},[t._v("#")]),t._v(" 3. 其他安全措施")]),t._v(" "),a("ul",[a("li",[t._v("HTTP-only Cookie：禁止 JavaScript 读取某些敏感 Cookie，攻击者完成 XSS 注入后也无法窃取此 Cookie。")]),t._v(" "),a("li",[t._v("验证码：防止脚本冒充用户提交危险操作。")])]),t._v(" "),a("h2",{attrs:{id:"_3-xss检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-xss检测"}},[t._v("#")]),t._v(" 3 XSS检测")]),t._v(" "),a("ol",[a("li",[t._v("使用通用 XSS 攻击字符串手动检测 XSS 漏洞。")]),t._v(" "),a("li",[t._v("使用扫描工具自动检测 XSS 漏洞。")])]),t._v(" "),a("h2",{attrs:{id:"_4-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-总结"}},[t._v("#")]),t._v(" 4 总结")]),t._v(" "),a("ul",[a("li",[t._v("XSS分为存储型、反射型、DOM型三类，其存储位置、插入点有区别；")]),t._v(" "),a("li",[t._v("XSS的预防主要根据类型不一样采用不同的措施：\n"),a("ul",[a("li",[t._v("对于存储型和反射型，一般采用纯前端渲染和对HTML进行充分转义")]),t._v(" "),a("li",[t._v("对于DOM型，要避免一些危险的属性和方法，以及内联事件监听器等，另外，可以使用 Vue/React 技术栈")]),t._v(" "),a("li",[t._v("此外，还可以通过使用CSP、限制输入内容长度、设置HTTP-only、验证码验证等方式预防XSS攻击。")])])])]),t._v(" "),a("p",[t._v("虽然很难通过技术手段完全避免 XSS，但我们可以总结以下原则减少漏洞的产生：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("利用模板引擎")]),t._v(" 开启模板引擎自带的 HTML 转义功能。例如： 在 ejs 中，尽量使用 "),a("code",[t._v("<%= data %>")]),t._v(" 而不是 "),a("code",[t._v("<%- data %>")]),t._v("； 在 doT.js 中，尽量使用 "),a("code",[t._v("{{! data }")]),t._v(" 而不是 "),a("code",[t._v("{{= data }")]),t._v("； 在 FreeMarker 中，确保引擎版本高于 2.3.24，并且选择正确的 "),a("code",[t._v("freemarker.core.OutputFormat")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("避免内联事件")]),t._v(" 尽量不要使用 "),a("code",[t._v("onLoad=\"onload('"+t._s(t.data)+"')\"")]),t._v("、"),a("code",[t._v("onClick=\"go('"+t._s(t.action)+"')\"")]),t._v(" 这种拼接内联事件的写法。在 JavaScript 中通过 "),a("code",[t._v(".addEventlistener()")]),t._v(" 事件绑定会更安全。")]),t._v(" "),a("li",[a("strong",[t._v("避免拼接 HTML")]),t._v(" 前端采用拼接 HTML 的方法比较危险，如果框架允许，使用 "),a("code",[t._v("createElement")]),t._v("、"),a("code",[t._v("setAttribute")]),t._v(" 之类的方法实现。或者采用比较成熟的渲染框架，如 Vue/React 等。")]),t._v(" "),a("li",[a("strong",[t._v("时刻保持警惕")]),t._v(" 在插入位置为 DOM 属性、链接等位置时，要打起精神，严加防范。")]),t._v(" "),a("li",[a("strong",[t._v("增加攻击难度，降低攻击后果")]),t._v(" 通过 CSP、输入长度配置、接口安全措施等方法，增加攻击的难度，降低攻击的后果。")]),t._v(" "),a("li",[a("strong",[t._v("主动检测和发现")]),t._v(" 可使用 XSS 攻击字符串和自动扫描工具寻找潜在的 XSS 漏洞。")])]),t._v(" "),a("p",[t._v("问题：")]),t._v(" "),a("ul",[a("li",[t._v("XSS 防范是后端 RD 的责任，后端 RD 应该在所有用户提交数据的接口，对敏感字符进行转义，才能进行下一步操作。\n"),a("ul",[a("li",[t._v("不正确。因为： "),a("strong",[t._v("防范存储型和反射型 XSS 是后端 RD 的责任。而 DOM 型 XSS 攻击不发生在后端，是前端 RD 的责任。防范 XSS 是需要后端 RD 和前端 RD 共同参与的系统工程")]),t._v("。转义应该在输出 HTML 时进行，而不是在提交用户输入时。")])])]),t._v(" "),a("li",[t._v("所有要插入到页面上的数据，都要通过一个敏感字符过滤函数的转义，过滤掉通用的敏感字符后，就可以插入到页面中。\n"),a("ul",[a("li",[t._v("不正确。 不同的上下文，如 HTML 属性、HTML 文字内容、HTML 注释、跳转链接、内联 JavaScript 字符串、内联 CSS 样式表等，所需要的转义规则不一致。 业务 RD 需要选取合适的转义库，并针对不同的上下文调用不同的转义规则。")])])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://tech.meituan.com/2018/09/27/fe-security.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端安全系列（一）：如何防止XSS攻击？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://forum.juejin.cn/youthcamp/post/7058909289787686926",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web开发的安全之旅"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=v.exports}}]);