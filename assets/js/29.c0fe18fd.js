(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{587:function(s,t,a){"use strict";a.r(t);var e=a(10),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Webpack 是一种前端资源构建工具，一个静态模块打包器。\n")]),s._v(" "),a("ul",[a("li",[s._v("前端资源构建工具：主要理解一下这个前端资源是哪些资源。这些前端资源就是浏览器不认识的 web 资源，比如 sass、less、ts，包括 js 里的高级语法。这些资源要能够在浏览器中正常工作，必须一一经过编译处理。而 webpack 就是可以集成这些编译工具的一个总的构建工具。")]),s._v(" "),a("li",[s._v("静态模块打包器：静态模块就是 web 开发过程中的各种资源文件，webpack 根据引用关系，构建一个依赖关系图，然后利用这个关系图将所有静态模块打包成一个或多个 bundle 输出。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/375ab82b63774c64a1076b99bde7644c~tplv-k3u1fbpfcp-watermark.awebp?",alt:""}})]),s._v(" "),a("p",[s._v("那么在项目中我们怎么使用webpack呢？")]),s._v(" "),a("h2",{attrs:{id:"_00-webpack作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_00-webpack作用"}},[s._v("#")]),s._v(" 00 Webpack作用")]),s._v(" "),a("ul",[a("li",[s._v("模块打包。可以将不同模块的文件打包整合在一起，并且保证它们之间的引用正确，执行有序。利用打包我们就可以在开发的时候根据我们自己的业务自由划分文件模块，保证项目结构的清晰和可读性。")]),s._v(" "),a("li",[s._v("编译兼容。在前端的“上古时期”，手写一堆浏览器兼容代码一直是令前端工程师头皮发麻的事情，而在今天这个问题被大大的弱化了，通过webpack的Loader机制，不仅仅可以帮助我们对代码做polyfill，还可以编译转换诸如"),a("code",[s._v(".less")]),s._v(", "),a("code",[s._v(".vue")]),s._v(", "),a("code",[s._v(".jsx")]),s._v("这类在浏览器无法识别的格式文件，让我们在开发的时候可以使用新特性和新语法做开发，提高开发效率。")]),s._v(" "),a("li",[s._v("能力扩展。通过webpack的Plugin机制，我们在实现模块化打包和编译兼容的基础上，可以进一步实现诸如按需加载，代码压缩等一系列功能，帮助我们进一步提高自动化程度，工程效率以及打包输出的质量。")])]),s._v(" "),a("h2",{attrs:{id:"_01-项目开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-项目开发"}},[s._v("#")]),s._v(" 01 项目开发")]),s._v(" "),a("h3",{attrs:{id:"_1-1-entry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-entry"}},[s._v("#")]),s._v(" 1.1 entry")]),s._v(" "),a("p",[s._v("入口（entry）：指示 Webpack 以哪个文件为入口起点开始打包，分析构建内部依赖图。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("string方式： 单入口，打包形成一个chunk，输出一个buldle文件。chunk的名称默认是main.js")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("entry"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("array方式：多入口，所有入口文件最终只会形成一个chunk，输出出去只有一个bundle文件")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("entry"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/test.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("object：多入口，有几个入口文件就形成几个chunk，输出几个bundle文件。此时chunk的名称就是对象key值")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("entry"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    index"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./src/test.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_1-2-output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-output"}},[s._v("#")]),s._v(" 1.2 output")]),s._v(" "),a("p",[s._v("输出（output）：指示 Webpack 打包后的资源 bundles 输出到哪里，以及如何命名。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    output"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出文件目录（将来所有资源输出的公共目录，包括css和静态文件等等）")]),s._v("\n        path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dist"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//默认")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 入口文件名称（指定名称+目录）")]),s._v("\n        filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[name].js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所有资源引入公共路径前缀，一般用于生产环境，小心使用")]),s._v("\n        publicPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* \n        非入口文件chunk的名称。所谓非入口即import动态导入形成的chunk或者optimization中的splitChunks提取的公共chunk\n        它支持和 filename 一致的内置变量\n        */")]),s._v("\n        chunkFilename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[contenthash:10].chunk.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        clean"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打包前清空输出目录，相当于clean-webpack-plugin插件的作用,webpack5新增。")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 当用 Webpack 去构建一个可以被其他模块导入使用的库时需要用到library */")]),s._v("\n        library"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[name]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//整个库向外暴露的变量名")]),s._v("\n            type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"window"')]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//库暴露的方式")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"_1-3-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-loader"}},[s._v("#")]),s._v(" 1.3 loader")]),s._v(" "),a("p",[s._v("Webpack 自身只能理解 JavaScript 和 json 文件，loader 让 Webpack 能够处理其他文件。")]),s._v(" "),a("p",[s._v("在module.rules中配置：")]),s._v(" "),a("ul",[a("li",[s._v("test：指定匹配模式")]),s._v(" "),a("li",[s._v("include/exclude：指定编译或不编译哪些文件")]),s._v(" "),a("li",[s._v("use：指定使用的loader，可以是一个数组，此时loader的执行顺序是从右到左")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  module"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    rules"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\.vue$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        use"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue-loader'")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\.css$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        use"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'style-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'css-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        test"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\.js$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        exclude"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("node_modules")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不编译node_modules下的文件")]),s._v("\n        loader"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'babel-loader'")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("常见loader：")]),s._v(" "),a("ul",[a("li",[s._v("CSS：style-loader、css-loader、sass-loader")]),s._v(" "),a("li",[s._v("JS：babel-loader、eslint-loader、ts-loader")]),s._v(" "),a("li",[s._v("HTML：html-loader")]),s._v(" "),a("li",[s._v("Assets：file-loader、url-loader、json5-loader")])]),s._v(" "),a("h3",{attrs:{id:"_1-4-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-plugin"}},[s._v("#")]),s._v(" 1.4 plugin")]),s._v(" "),a("p",[s._v("插件（plugins）：可以用于执行范围更广的任务。从打包优化和压缩，一直到重新定义环境中的变量等。")]),s._v(" "),a("p",[s._v("在项目配置中，以一个数组的形式配置在plugins属性上：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HtmlWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      template"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们要使用的 html 模板地址")]),s._v("\n      filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'index.html'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打包后输出的文件名")]),s._v("\n      title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'我是标题'")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// index.html 模板内，通过 <%= htmlWebpackPlugin.options.title %> 拿到的变量")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VueLoaderPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CleanWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("常见plugin：")]),s._v(" "),a("ul",[a("li",[s._v("HtmlWebpackPlugin：帮助创建html文件，并自动引入打包输出的bundles文件。支持html压缩")]),s._v(" "),a("li",[s._v("VueLoaderPlugin：将定义过的其它规则复制并应用到 "),a("code",[s._v(".vue")]),s._v(" 文件里相应语言的块。例如，如果你有一条匹配 "),a("code",[s._v("/\\.js$/")]),s._v(" 的规则，那么它会应用到 "),a("code",[s._v(".vue")]),s._v(" 文件里的 "),a("code",[s._v("<script>")]),s._v(" 块。")]),s._v(" "),a("li",[s._v("CleanWebpackPlugin：每次打包的时候，都会把 dist 目录清空，防止文件变动后，还有残留一些老的文件，以及避免一些缓存问题。"),a("strong",[s._v("webpack5中可以直接通过 "),a("code",[s._v("output.clean")]),s._v(" 属性清空")]),s._v("。")]),s._v(" "),a("li",[s._v("MiniCssExtractPlugin：将CSS提取到单独的文件中。它会为每个chunk创造一个css文件。需配合loader一起使用。")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://webpack.js.org/plugins/css-minimizer-webpack-plugin/#root",target:"_blank",rel:"noopener noreferrer"}},[s._v("CssMinimizerWebpackPlugin"),a("OutboundLink")],1),s._v("：将在Webpack构建过程中搜索CSS资源，提取到单独的文件中，并优化/最小化CSS，"),a("a",{attrs:{href:"https://webpack.docschina.org/plugins/css-minimizer-webpack-plugin/",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用 cssnano 优化和压缩 CSS"),a("OutboundLink")],1),s._v("。以"),a("a",{attrs:{href:"https://blog.csdn.net/huangbiao86/article/details/123125115",target:"_blank",rel:"noopener noreferrer"}},[s._v("数组"),a("OutboundLink")],1),s._v("的形式配置在optimization.minimizer属性中。")]),s._v(" "),a("li",[s._v("terser-webpack-plugin：压缩JS代码。其配置项parallel可以使用多进程并发运行以提高构建速度。")])]),s._v(" "),a("h3",{attrs:{id:"_1-5-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-mode"}},[s._v("#")]),s._v(" 1.5 mode")]),s._v(" "),a("p",[s._v("模式（mode）:指示 Webpack使用相应模式的配置。默认为production。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("选项")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("development")]),s._v(" "),a("td",[s._v("会将 DefinePlugin 中 process.env.NODE_ENV 的值设置为 development. 为模块和 chunk 启用有效的名。")])]),s._v(" "),a("tr",[a("td",[s._v("production")]),s._v(" "),a("td",[s._v("会将 DefinePlugin 中 process.env.NODE_ENV 的值设置为 production。为模块和 chunk 启用确定性的混淆名称，FlagDependencyUsagePlugin，FlagIncludedChunksPlugin，ModuleConcatenationPlugin，NoEmitOnErrorsPlugin 和 TerserPlugin 。")])]),s._v(" "),a("tr",[a("td",[s._v("none")]),s._v(" "),a("td",[s._v("不使用任何默认优化选项")])])])]),s._v(" "),a("ul",[a("li",[s._v("DefinePlugin：定义全局变量process.env.NODE_ENV，区分程序运行状态。")]),s._v(" "),a("li",[s._v("FlagDependencyUsagePlugin：标记没有用到的依赖。")]),s._v(" "),a("li",[s._v("FlagIncludedChunksPlugin：标记chunks，防止chunks多次加载。")]),s._v(" "),a("li",[s._v("ModuleConcatenationPlugin：作用域提升(scope hosting)，预编译功能，提升或者预编译所有模块到一个闭包中，提升代码在浏览器中的执行速度。")]),s._v(" "),a("li",[s._v("NoEmitOnErrorsPlugin：防止程序报错，就算有错误也继续编译。")]),s._v(" "),a("li",[s._v("TerserPlugin：压缩js代码。")])]),s._v(" "),a("h2",{attrs:{id:"_02-项目打包优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-项目打包优化"}},[s._v("#")]),s._v(" 02 项目打包优化")]),s._v(" "),a("h3",{attrs:{id:"_2-1-source-map-开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-source-map-开发"}},[s._v("#")]),s._v(" 2.1 source-map（开发）")]),s._v(" "),a("p",[s._v("source-map：一种提供源代码到构建后代码映射的技术，如果构建后代码出错了，通过映射可以追踪源代码错误。优化代码调试。\n开启source-map配置很简单："),a("code",[s._v('devtool:"source-map"')]),s._v("。source-map的值有多种类型，简单解释下。")]),s._v(" "),a("ul",[a("li",[s._v("inline：内联，一个chunk生成一个总的source-map")]),s._v(" "),a("li",[s._v("eval：内联，每一个文件生成一个source-map")]),s._v(" "),a("li",[s._v("cheap：外部，报错位置只能精确到行。")]),s._v(" "),a("li",[s._v("cheap-module：显示第三方库的source-map")])]),s._v(" "),a("p",[s._v("内联和外部的区别： 内联不生成 map.js 文件，而是通过 data-url 的形式直接注入到 chunk 里；内联构建速度更快。")]),s._v(" "),a("h3",{attrs:{id:"_2-2-hmr-开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-hmr-开发"}},[s._v("#")]),s._v(" 2.2 HMR（开发）")]),s._v(" "),a("p",[s._v("模块热替换，也可以理解为局部替换。替换、添加或删除 模块，而无需重新加载整个页面。")]),s._v(" "),a("p",[s._v("那么怎么开启 HMR 模式，在devServer属性中配置，并开启watch持续监听：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n\n  devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    hot"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    open"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  watch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ......")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"_2-3-缓存-打包优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-缓存-打包优化"}},[s._v("#")]),s._v(" 2.3 缓存（打包优化）")]),s._v(" "),a("p",[s._v("在编译打包时可对文件做缓存，有两种方式：")]),s._v(" "),a("ul",[a("li",[s._v("解析文件的loader自身带有缓存功能（如babel-loader、vue-loader）")]),s._v(" "),a("li",[s._v("使用专门的loader（cache-loader）")])]),s._v(" "),a("p",[s._v("开启缓存后，对于未改动的文件，webpack直接从缓存中读取而不用再次编译，大大加快构建速度")]),s._v(" "),a("blockquote",[a("p",[s._v("webpack5 推出了"),a("strong",[s._v("持久化缓存")]),s._v("功能，构建结果持久化缓存到本地的磁盘，二次构建(非 watch 模块)直接利用磁盘缓存的结果从而跳过构建过程当中的 resolve、build 等耗时的流程，从而大大提升编译构建的效率。\n详见 => "),a("a",{attrs:{href:"https://segmentfault.com/a/1190000041726881",target:"_blank",rel:"noopener noreferrer"}},[s._v("深度解析webpack5持久化缓存"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"_2-4-dll-打包优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-dll-打包优化"}},[s._v("#")]),s._v(" 2.4 DLL（打包优化）")]),s._v(" "),a("p",[s._v("使用DLL（动态链接库）技术对公共库进行提前打包，可大大提升构建速度。公共库一般情况下是不会有改动的，所以这些模块只需要编译一次就可以了，并且可以提前打包好。在主程序后续构建时如果检测到该公共库已经通过dll打包了，就不再对其编译而是直接从动态链接库中获取。 实现dll打包需要以下三步：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("抽取公共库，打包到一个或多个动态链接库中。")]),s._v(" "),a("ul",[a("li",[s._v("新建一个webpack.dll.js用来提前打包动态链接库")])])]),s._v(" "),a("li",[a("p",[s._v("将打包好的动态链接库在页面中引入。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("在模板页index.html中引入打包好的动态链接库")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("./dll/vendor.dll.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("./dll/other.dll.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("主程序使用了动态链接库中的公共库时，不能被打包入bundle，应该直接去动态链接库中获取。")]),s._v(" "),a("ul",[a("li",[s._v("在主程序的Webpack配置中使用 webpack.DllReferencePlugin （索引链接）插件，读取webpack.DllPlugin生成的manifest.json文件，从中获取依赖关系。")])])])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/890e7e2688bb",target:"_blank",rel:"noopener noreferrer"}},[s._v("点这里看博客文章"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"_2-5-tree-shaking-打包优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-tree-shaking-打包优化"}},[s._v("#")]),s._v(" 2.5 Tree Shaking（打包优化）")]),s._v(" "),a("p",[s._v("移除 JavaScript 上下文中的未引用代码(dead-code)。")]),s._v(" "),a("blockquote",[a("p",[s._v("将整个应用程序想象成一棵树，绿色的树叶表示实际用到的source code（源码）和library（库），灰色的树叶则表示未被使用的代码，是枯萎的树叶。为了除去这些死去的无用的树叶，你需要摇动这棵树使其落下。")])]),s._v(" "),a("p",[s._v('Tree Shaking 不用特别配置，只要将mode设置为"production"，Webpack就自动启用Tree Shaking了。有两点说明下：')]),s._v(" "),a("ul",[a("li",[s._v("源代码必须使用 静态的 ES6 模块化语法。原因是Webpack在构建时通过静态分析，分析出代码之间的依赖关系。而动态导入如require语法只有在执行时才知道导入了哪个模块，所以无法做Tree Shaking。")]),s._v(" "),a("li",[s._v("三方库无法做Tree Shaking。原因猜测是Webpack无法保证三方库导入是否会直接对程序产生影响。")])]),s._v(" "),a("h3",{attrs:{id:"_2-6-thread-loader多进程打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-thread-loader多进程打包"}},[s._v("#")]),s._v(" 2.6 thread-loader多进程打包")]),s._v(" "),a("p",[s._v("一般只有在编译花费时间较长时才需要使用 thread-loader，因为这个 loader 启动和通信都是有开销的，如果时间较短，使用这个 loader 就得不偿失了。")]),s._v(" "),a("h3",{attrs:{id:"_2-7-code-split-代码分割"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-code-split-代码分割"}},[s._v("#")]),s._v(" 2.7 Code Split（代码分割）")]),s._v(" "),a("p",[s._v("Webpack默认会将所有依赖的文件打包输出到一个bundle.js中（单入口时），当应用程序逐渐复杂，这个bundle.js文件也会越来越大，浏览器加载的速度也会越来越慢，所以就需要使用代码分割来将不同代码单独打包成不同chunk输出。")]),s._v(" "),a("p",[s._v("可以通过"),a("a",{attrs:{href:"https://blog.csdn.net/weixin_45047039/article/details/110389487",target:"_blank",rel:"noopener noreferrer"}},[s._v("三种方式实现代码分割"),a("OutboundLink")],1),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("将entry配置成一个对象，设置多个打包入口，同时在HtmlWebpackPlugin通过chunks属性指定载入的bundle.js文件；")]),s._v(" "),a("li",[s._v("通过配置 "),a("a",{attrs:{href:"https://webpack.js.org/plugins/split-chunks-plugin/#defaults",target:"_blank",rel:"noopener noreferrer"}},[s._v("optimization.splitChunks"),a("OutboundLink")],1),s._v(" 将公共代码单独打包成chunk；")]),s._v(" "),a("li",[s._v("import动态导入。当想要根据业务拆分bundle时推荐用这种方式。import动态导入的模块Webpack会将其作为单独的chunk打包。")])]),s._v(" "),a("h3",{attrs:{id:"_2-8-缩小打包作用域-打包优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-缩小打包作用域-打包优化"}},[s._v("#")]),s._v(" 2.8 缩小打包作用域（打包优化）")]),s._v(" "),a("ul",[a("li",[s._v("使用 exclude/include（确定 loader 规则范围）（exclude优先级最高）")]),s._v(" "),a("li",[s._v("使用 resolve 模块：\n"),a("ul",[a("li",[s._v("resolve.modules 指明第三方模块的绝对路径 (减少不必要的查找)；")]),s._v(" "),a("li",[s._v("resolve.mainFields 只采用 main 字段作为入口文件描述字段 (减少搜索步骤，需要考虑到所有运行时依赖的第三方模块的入口文件描述字段)")]),s._v(" "),a("li",[s._v("resolve.extensions 尽可能减少后缀尝试的可能性")])])]),s._v(" "),a("li",[s._v("noParse 对完全不需要解析的库进行忽略 (不去解析但仍会打包到 bundle 中，注意被忽略掉的文件里不应该包含 import、require、define 等模块化语句)")]),s._v(" "),a("li",[s._v("IgnorePlugin (完全排除模块)")]),s._v(" "),a("li",[s._v("合理使用alias")])]),s._v(" "),a("p",[s._v("【"),a("a",{attrs:{href:"https://webpack.js.org/guides/build-performance/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网 - 构建性能"),a("OutboundLink")],1),s._v("】")]),s._v(" "),a("h2",{attrs:{id:"_03-一些其他的小问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-一些其他的小问题"}},[s._v("#")]),s._v(" 03 一些其他的小问题")]),s._v(" "),a("h3",{attrs:{id:"babel-config-js-和-babelrc-对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-config-js-和-babelrc-对比"}},[s._v("#")]),s._v(" babel.config.js 和 .babelrc 对比")]),s._v(" "),a("p",[s._v("这两个都是Babel的配置文件。许多工具都有自己的配置文件，例如 ESLint 的配置文件为 "),a("code",[s._v(".eslintrc")]),s._v("，Prettier 的配置文件为 "),a("code",[s._v(".prettierrc")]),s._v("。")]),s._v(" "),a("p",[s._v("Babel 的配置文件是 Babel 执行时默认会在当前目录寻找的文件，主要有 "),a("code",[s._v(".babelrc")]),s._v("、"),a("code",[s._v(".babelrc.js")]),s._v("、"),a("code",[s._v("babel.config.js")]),s._v("、"),a("code",[s._v("package.json")]),s._v(" 文件。")]),s._v(" "),a("ul",[a("li",[s._v("babel.config.js 文件是按照 commonjs 导出对象，可以写js的逻辑；加载规则针对了第三方的组件和自己的代码内容。")]),s._v(" "),a("li",[s._v(".babelrc 文件的加载规则是按目录加载的，是只针对自己的代码。")]),s._v(" "),a("li",[s._v("一般有了 "),a("code",[s._v("babel.config.js")]),s._v(" 就不会在去执行 "),a("code",[s._v(".babelrc")]),s._v(" 的设置。")])]),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_45195200/article/details/118468239",target:"_blank",rel:"noopener noreferrer"}},[s._v("Babel 配置文件"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"代码分割的本质和意义是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码分割的本质和意义是什么"}},[s._v("#")]),s._v(" 代码分割的本质和意义是什么？")]),s._v(" "),a("p",[s._v("在最开始使用Webpack的时候, 都是将所有的js文件全部打包到一个 bundle.js 文件中(文件名取决与在webpack.config.js文件中output.filename), 但是在大型项目中, bundle.js可能过大, 导致页面加载时间过长. 这个时候就需要code splitting, code splitting就是将文件分割成块(chunk), 我们可以定义一些分割点(split point), 根据这些分割点对文件进行分块, 并实现"),a("strong",[s._v("按需加载")]),s._v("。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("参考链接")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6971743815434993671",target:"_blank",rel:"noopener noreferrer"}},[s._v("Webpack5.0学习总结-基础篇"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://forum.juejin.cn/youthcamp/post/7062275841912209415",target:"_blank",rel:"noopener noreferrer"}},[s._v("【第二届青训营-寒假前端场】- Day10 - 构建Webpack知识体系"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/W86drEQ8ZYLSbpphA-o4eg",target:"_blank",rel:"noopener noreferrer"}},[s._v("【包真】我的第一次webpack优化，首屏渲染从9s到1s"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);t.default=n.exports}}]);