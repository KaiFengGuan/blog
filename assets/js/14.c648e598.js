(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{572:function(_,v,t){"use strict";t.r(v);var s=t(10),e=Object(s.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[_._v("浏览器输入URL到显示页面的过程发生了什么？这是一道很常见的面试题，可以引申出非常多的知识点，常常作为考察基础前的必问题......\n"),_._v("\n在一次面试的时候我答得不是很好，现在整理一下，以免以后还出现问题。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff5711fea87049f99bb260f871c19d42~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),_._v(" "),t("p",[_._v("大概来说，可以分为以下几个阶段：")]),_._v(" "),t("ol",[t("li",[_._v("输入")]),_._v(" "),t("li",[_._v("检查缓存")]),_._v(" "),t("li",[_._v("URL解析")]),_._v(" "),t("li",[_._v("DNS解析")]),_._v(" "),t("li",[_._v("三次握手建立TCP连接（HTTPS还要TLS握手）并发送请求")]),_._v(" "),t("li",[_._v("服务器处理并响应请求")]),_._v(" "),t("li",[_._v("四次挥手关闭TCP连接")]),_._v(" "),t("li",[_._v("解析响应数据")]),_._v(" "),t("li",[_._v("开始渲染")])]),_._v(" "),t("h2",{attrs:{id:"_1-输入处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-输入处理"}},[_._v("#")]),_._v(" 1 输入处理")]),_._v(" "),t("ul",[t("li",[_._v("浏览器的UI线程会实时捕捉输入的内容，如果输入的不是网址或者协议不合法的话，就会使用浏览器默认的搜索引擎，来合成新的带搜索关键字的URL，准备进行搜索（这里如果有非法字符还会进行转义）")]),_._v(" "),t("li",[_._v("执行一次当前页面的"),t("code",[_._v("beforeunload")]),_._v("事件，让页面退出之前执行一些数据清理工作，或者有表单没有提交的情况提示用户是否确认离开")]),_._v(" "),t("li",[_._v("通过IPC把URL发送给网络进程")])]),_._v(" "),t("h2",{attrs:{id:"_2-检查缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-检查缓存"}},[_._v("#")]),_._v(" 2 检查缓存")]),_._v(" "),t("p",[_._v("如果有缓存，并且没有过期，就不发送请求，直接拿来解码再开始渲染流程")]),_._v(" "),t("ul",[t("li",[_._v("如果是https请求，有可能先找"),t("code",[_._v("Service Worker")]),_._v("，如果设置了请求拦截，离线缓存")]),_._v(" "),t("li",[_._v("如果没有，再找浏览器的"),t("strong",[_._v("内存缓存")]),_._v("（"),t("code",[_._v("Memory Cache")]),_._v(")")]),_._v(" "),t("li",[_._v("如果还没有，再找"),t("strong",[_._v("硬盘缓存")]),_._v("（"),t("code",[_._v("Disk Cache")]),_._v("）（ 强缓存和协商缓存都属于硬盘缓存）")]),_._v(" "),t("li",[_._v("如果这三种都没有找到，请求还是http2的话，还可能会查找"),t("strong",[_._v("推送缓存")]),_._v("（"),t("code",[_._v("Push Cache")]),_._v(")，就是找Session（Session会话结束就会释放，所以存在时间很短）")]),_._v(" "),t("li",[_._v("如果没有缓存或者缓存过期，再开始解析URL")])]),_._v(" "),t("h2",{attrs:{id:"_3-url解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-url解析"}},[_._v("#")]),_._v(" 3 URL解析")]),_._v(" "),t("ul",[t("li",[_._v("把请求需要的"),t("code",[_._v("协议")]),_._v("、"),t("code",[_._v("域名")]),_._v("、"),t("code",[_._v("端口")]),_._v("、"),t("code",[_._v("路径")]),_._v("这些信息解析提取出来")]),_._v(" "),t("li",[_._v("根据解析出来的域名，进行DNS解析，找到要请求的服务器的IP地址")])]),_._v(" "),t("h2",{attrs:{id:"_4-dns解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-dns解析"}},[_._v("#")]),_._v(" 4 DNS解析")]),_._v(" "),t("ul",[t("li",[_._v("本地DNS缓存查找（这个过程客户端只发出一次查询请求）\n"),t("ul",[t("li",[_._v("先查浏览器缓存")]),_._v(" "),t("li",[_._v("再查本地host文件")]),_._v(" "),t("li",[_._v("然后查本地DNS服务器缓存")]),_._v(" "),t("li",[_._v("如果都没有找到，就会走DNS服务器设置的转发器请求")])])]),_._v(" "),t("li",[_._v("向跟根域名服务器发起解析请求（这个过程会发出多次查询请求）\n"),t("ul",[t("li",[_._v("先去DNS"),t("strong",[_._v("根域名("),t("code",[_._v(".")]),_._v(")服务器")]),_._v("查询，属于哪个顶级域名服务器("),t("code",[_._v(".com")]),_._v(")，然后返回顶级域名服务器IP")]),_._v(" "),t("li",[_._v("再根据返回的IP去"),t("strong",[_._v("顶级域名服务器")]),_._v("查找，属于哪个权威域名服务器("),t("code",[_._v("xxx.com")]),_._v(")，返回权威域名服务器IP")]),_._v(" "),t("li",[_._v("再根据返回的IP去"),t("strong",[_._v("权威域名服务器")]),_._v("查找\n"),t("ul",[t("li",[_._v("没有配置CDN，直接返回解析到的IP")]),_._v(" "),t("li",[_._v("有配置CDN，权威域名会返回一个CName别名记录，它指向CDN网络中的智能DNS负载均衡系统，然后负载均衡系统通过智能算法，将最佳CDN节点的IP返回")])])])])])]),_._v(" "),t("h2",{attrs:{id:"_5-建立tcp连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-建立tcp连接"}},[_._v("#")]),_._v(" 5 建立TCP连接")]),_._v(" "),t("p",[_._v("三次握手的原因：")]),_._v(" "),t("ul",[t("li",[_._v("阻止重复历史连接的初始化（主要原因）")]),_._v(" "),t("li",[_._v("同步双方的初始序列号")]),_._v(" "),t("li",[_._v("避免资源浪费（而不是四次握手）")]),_._v(" "),t("li",[_._v("确认双方的收发能力（而不是二次握手）")])]),_._v(" "),t("p",[_._v("三次握手过程：")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("第一次握手")]),_._v("：客户端向服务器发送（SYN，seq = x）")]),_._v(" "),t("li",[t("strong",[_._v("第二次握手")]),_._v("：服务器收到请求后向客户端发送（SYN + ACK，seq = y，ack = x + 1）")]),_._v(" "),t("li",[t("strong",[_._v("第三次握手")]),_._v("：客户端收到服务器的确认应答后，向服务端发送（ACK，seq = x + 1，ack = y + 1）")])]),_._v(" "),t("h2",{attrs:{id:"_6-服务器处理请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-服务器处理请求"}},[_._v("#")]),_._v(" 6 服务器处理请求")]),_._v(" "),t("p",[_._v("连接建立成功之后，浏览器会构建请求行、cookie等数据附加到请求头中，发给服务器，服务器接受请求并解析。")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("如果没有对应资源，返回404状态码")])]),_._v(" "),t("li",[t("p",[_._v("否则检查HTTP请求头有没有包含"),t("strong",[_._v("协商缓存")]),_._v("信息（强缓存过期会走这个步骤），如果验证缓存没有更新，过期的缓存依然可以使用，就返回304状态码和空响应体")]),_._v(" "),t("ul",[t("li",[_._v("要是没有缓存或者资源更新了，还没有CDN的话，就读取完整请求并准备http响应，进行查询数据库等操作")]),_._v(" "),t("li",[_._v("要是连接的是CDN节点，并且正好有这个资源就直接返回，要是没有资源或者资源更新了的话，CDN服务器就去源站获取文件，如果源站也没有，就404了，有的话就返回给CDN节点缓存起来")])])]),_._v(" "),t("li",[t("p",[_._v("然后将响应数据通过之前建立的TCP连接，返回给浏览器的网络进程")])]),_._v(" "),t("li",[t("p",[_._v("浏览器接收到响应数据之后，如果是"),t("strong",[_._v("http1.1以下则直接关闭连接，否则双方都可以根据情况选择关闭TCP连接或者保留重用，现在浏览器默认都会保持连接(keep-alive)")])])])]),_._v(" "),t("h2",{attrs:{id:"_7-四次挥手关闭tcp连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-四次挥手关闭tcp连接"}},[_._v("#")]),_._v(" 7 四次挥手关闭TCP连接")]),_._v(" "),t("p",[_._v("比如浏览器要关闭连接，过程是这样子的：")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("第一次挥手")]),_._v("：浏览器发送"),t("code",[_._v("FIN")]),_._v("报文，"),t("code",[_._v("seq = u")]),_._v("，并停止发送数据，但可以接收服务器的数据；")]),_._v(" "),t("li",[t("strong",[_._v("第二次挥手")]),_._v("：服务器收到后发送"),t("code",[_._v("ACK")]),_._v("报文，"),t("code",[_._v("seq = v")]),_._v("，"),t("code",[_._v("ack = u + 1")]),_._v("，表明收到；")]),_._v(" "),t("li",[t("strong",[_._v("第三次挥手")]),_._v("：服务器数据发送完了，给浏览器发送"),t("code",[_._v("FIN + ACK")]),_._v("报文，"),t("code",[_._v("seq = w")]),_._v("，"),t("code",[_._v("ack = u + 1")]),_._v("；")]),_._v(" "),t("li",[t("strong",[_._v("第四次挥手")]),_._v("：浏览器收到后，发送"),t("code",[_._v("ACK")]),_._v("报文，"),t("code",[_._v("seq = w + 1")]),_._v("，"),t("code",[_._v("ack = u + 1")]),_._v("。")])]),_._v(" "),t("h2",{attrs:{id:"_8-解析响应数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-解析响应数据"}},[_._v("#")]),_._v(" 8 解析响应数据")]),_._v(" "),t("ul",[t("li",[_._v("如果返回的状态码是"),t("code",[_._v("301")]),_._v("或"),t("code",[_._v("302")]),_._v("就根据响应头的"),t("code",[_._v("Location")]),_._v("字段"),t("strong",[_._v("重定向")]),_._v("到其他URL，然后一切从头开始，否则然后根据情况选择关闭TCP连接或者保留重用")]),_._v(" "),t("li",[_._v("恶意站点检查：SafeBrowsing检查如果是恶意站点，就会展示警告页面")]),_._v(" "),t("li",[_._v("如果状态码是"),t("code",[_._v("2xx")]),_._v("，然后判断资源是否缓存，是的话先缓存起来")]),_._v(" "),t("li",[_._v("然后对响应解码（如gzip压缩），根据资源类型"),t("code",[_._v("Content-type")]),_._v("决定如何处理：\n"),t("ul",[t("li",[_._v("如果是下载文件，请求提交给"),t("strong",[_._v("下载管理器")]),_._v("；")]),_._v(" "),t("li",[_._v("否则通知UI线程，创建渲染器进程来渲染页面。")])])]),_._v(" "),t("li",[_._v("通过IPC管道将数据传给渲染器进程的主线程")])]),_._v(" "),t("h2",{attrs:{id:"_9-渲染过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-渲染过程"}},[_._v("#")]),_._v(" 9 渲染过程")]),_._v(" "),t("p",[_._v("渲染机制很复杂，需要执行的任务很多，渲染模块执行过程会被分为多个子阶段，开始一个边解析边渲染的流程：")]),_._v(" "),t("h4",{attrs:{id:"_1-解析html生成dom树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-解析html生成dom树"}},[_._v("#")]),_._v(" "),t("strong",[_._v("（1）解析HTML生成DOM树")])]),_._v(" "),t("ul",[t("li",[_._v("接收HTML，将原始字节数据转换为字符")]),_._v(" "),t("li",[_._v("词法分析，将字符解析成标记，也称为令牌(token)")]),_._v(" "),t("li",[_._v("语法分析，将标记转成DOM节点对象，并定义属性和规则")]),_._v(" "),t("li",[_._v("解析器会维护一个"),t("strong",[_._v("解析栈")]),_._v("，栈底为document，也就是DOM树的根节点，然后根据节点对象关系按顺序依次向解析栈添加，形成"),t("strong",[_._v("DOM树")]),_._v("。")])]),_._v(" "),t("blockquote",[t("p",[_._v("解析过程中遇到没有"),t("code",[_._v("async")]),_._v("或"),t("code",[_._v("defer")]),_._v("的script标签引用入时，会暂停解析过程，同时通过网络线程加载文件，文件加载后切换至js引擎执行相应代码，代码执行完成后再切换回渲染引擎继续渲染流程，也就是阻塞渲染。")])]),_._v(" "),t("h4",{attrs:{id:"_2-解析css生成cssom树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-解析css生成cssom树"}},[_._v("#")]),_._v(" "),t("strong",[_._v("（2）解析CSS生成CSSOM树")])]),_._v(" "),t("ul",[t("li",[_._v("渲染引擎拿到CSS之后，首先"),t("strong",[_._v("格式化")]),_._v("CSS，将CSS转为一个成浏览器认识的结构"),t("code",[_._v("styleSheets")]),_._v("；")]),_._v(" "),t("li",[_._v("然后对计算好的样式进行"),t("strong",[_._v("标准化")]),_._v("操作，比如rem、颜色(blue,red)、字体(bold)，转成统一的渲染引擎更容易理解的值；")]),_._v(" "),t("li",[_._v("计算每个节点的具体样式信息，计算规则主要是"),t("strong",[_._v("继承")]),_._v("和"),t("strong",[_._v("层叠")]),_._v("（计算阶段的目的就是计算出DOM树中每个节点的位置信息、样式数据、文本节点数据）；")])]),_._v(" "),t("blockquote",[t("ul",[t("li",[_._v("CSS解析和DOM解析是可以同时进行的")]),_._v(" "),t("li",[_._v("script执行和CSS解析不能同时进行，CSS会阻塞JS执行")])]),_._v(" "),t("p",[_._v("因为JS执行时可能在文档的解析过程中 获取样式信息，如果样式信息没有加载和解析完毕，JS就会得到错误的值，所以会延迟JS执行")])]),_._v(" "),t("h4",{attrs:{id:"_3-layout布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-layout布局"}},[_._v("#")]),_._v(" （3）Layout布局")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("首先创建布局树")]),_._v(" "),t("ul",[t("li",[_._v("遍历DOM树中所有节点，将"),t("strong",[_._v("可见节点")]),_._v("添加到布局树中，不可见的不包括，如meta、script、display:none...")]),_._v(" "),t("li",[_._v("然后根据DOM结构和元素样式 对布局树中节点的几何位置信息计算")])])]),_._v(" "),t("li",[t("p",[_._v("分层（脱离文档流的元素会形成一个层叠上下文）")])]),_._v(" "),t("li",[t("p",[_._v("然后主线程为每个图层计算样式，"),t("strong",[_._v("把每一个图层的绘制拆分成很多小的绘制指令，生成绘制表")]),_._v("，这个表记录了绘制的顺序和绘制指令")])])]),_._v(" "),t("h4",{attrs:{id:"_4-栅格化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-栅格化"}},[_._v("#")]),_._v(" （4）栅格化")]),_._v(" "),t("ul",[t("li",[_._v("主线程会把绘制表通过commit提交给"),t("strong",[_._v("合成器线程")]),_._v("，合成器线程会再将图层分成"),t("strong",[_._v("图块")]),_._v("；")]),_._v(" "),t("li",[_._v("合成线程将分割好的图块发送给"),t("strong",[_._v("栅格化线程")]),_._v("，然后分别栅格化每个图块，再将栅格化之后的图块存储在GPU内存中")])]),_._v(" "),t("blockquote",[t("p",[_._v("合成器线程能够对不同的栅格化线程做优先处理，所以出现在视口内的图块会被优先栅格化")])]),_._v(" "),t("h4",{attrs:{id:"_5-合成和显示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-合成和显示"}},[_._v("#")]),_._v(" （5）合成和显示")]),_._v(" "),t("ul",[t("li",[_._v("当图块都被栅格化完成后，合成线程会收集栅格化线程的"),t("code",[_._v("draw quads")]),_._v("图块信息，该信息记录了图块在内存中的位置信息和图块在页面中的位置信息，这些信息会生成合成器帧")]),_._v(" "),t("li",[_._v("合成器帧通过IPC传给浏览器进程的 viz 组件，这个组件用来接收这个合成器帧")]),_._v(" "),t("li",[_._v("浏览器进程再将合成器帧绘制到显存中，再通过 GPU 渲染在屏幕上，这时候终于看到了页面内容")]),_._v(" "),t("li",[_._v("当屏幕内容发生变化，比如滚动了页面，合成器线程就会将栅格化好的层合成一个新的合成器帧，新的帧再传到显存， GPU 再渲染到页面上")])]),_._v(" "),t("br"),_._v(" "),t("br"),_._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[_._v("参考链接")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.cn/post/6994066112203718686",target:"_blank",rel:"noopener noreferrer"}},[_._v("(建议精读)输入URL到页面显示的前端体系知识"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.cn/post/6844903832435032072",target:"_blank",rel:"noopener noreferrer"}},[_._v("史上最详细的经典面试题 从输入URL到看到页面发生了什么？"),t("OutboundLink")],1)])])])])}),[],!1,null,null,null);v.default=e.exports}}]);