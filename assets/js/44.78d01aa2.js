(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{603:function(t,_,v){"use strict";v.r(_);var a=v(10),s=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"_1-运行环境之浏览器内核及引擎"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-运行环境之浏览器内核及引擎"}},[t._v("#")]),t._v(" 1 运行环境之浏览器内核及引擎")]),t._v(" "),v("p",[t._v("主流浏览器主要有"),v("strong",[t._v("IE/Edge，Chrome，Safari，Opera，Firefox")]),t._v("这五个。浏览器最重要或者说核心的部分是“Rendering Engine”，可大概译为“渲染引擎”，不过我们一般习惯将之称为“浏览器内核”。负责对网页语法的解释（如标准通用标记语言下的一个应用HTML、JavaScript）并渲染（显示）网页。")]),t._v(" "),v("h3",{attrs:{id:"_1-1-主流浏览器的内核及变化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-主流浏览器的内核及变化"}},[t._v("#")]),t._v(" 1.1 主流浏览器的内核及变化")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("主流浏览器")]),t._v(" "),v("th",[t._v("内核")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("IE -> Edge")]),t._v(" "),v("td",[t._v("trident->EdgeHTML->Chromium")])]),t._v(" "),v("tr",[v("td",[t._v("Chrome")]),t._v(" "),v("td",[t._v("webkit->blink")])]),t._v(" "),v("tr",[v("td",[t._v("Safari")]),t._v(" "),v("td",[t._v("webkit")])]),t._v(" "),v("tr",[v("td",[t._v("Firefox")]),t._v(" "),v("td",[t._v("Gecko")])]),t._v(" "),v("tr",[v("td",[t._v("Opera")]),t._v(" "),v("td",[t._v("Presto->blink")])])])]),t._v(" "),v("h3",{attrs:{id:"_1-2-主流浏览器的js引擎"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-主流浏览器的js引擎"}},[t._v("#")]),t._v(" 1.2 主流浏览器的js引擎")]),t._v(" "),v("p",[t._v("在早期内核也是包含js引擎的，而现在js引擎越来独立了，可以把它单独提出来。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("主流浏览器")]),t._v(" "),v("th",[t._v("js引擎")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("IE -> Edge")]),t._v(" "),v("td",[t._v("JScript（IE3.0-IE8.0） / Chakra（IE9+之后）")])]),t._v(" "),v("tr",[v("td",[t._v("Chrome")]),t._v(" "),v("td",[v("strong",[t._v("V8")])])]),t._v(" "),v("tr",[v("td",[t._v("Safari")]),t._v(" "),v("td",[t._v("Nitro（4-）")])]),t._v(" "),v("tr",[v("td",[t._v("Firefox")]),t._v(" "),v("td",[t._v("SpiderMonkey（1.0-3.0）/ TraceMonkey（3.5-3.6）/ JaegerMonkey（4.0-）")])]),t._v(" "),v("tr",[v("td",[t._v("Opera")]),t._v(" "),v("td",[t._v("Linear A（4.0-6.1）/ Linear B（7.0-9.2）/ Futhark（9.5-10.2）/ Carakan（10.5-）")])])])]),t._v(" "),v("h2",{attrs:{id:"_2-js引擎线程运行"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-js引擎线程运行"}},[t._v("#")]),t._v(" 2 js引擎线程运行")]),t._v(" "),v("blockquote",[v("p",[t._v('所谓的"JS是单线程的"只是指JS的主运行线程只有一个，而不是整个运行环境都是单线程。JS的运行环境主要是浏览器，以大家都很熟悉的Chrome的内核为例，他不仅是多线程的，而且是多进程的：')]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202204040856731.png",alt:""}})]),t._v(" "),v("p",[t._v("上图只是一个概括分类，意思是Chrome有这几类的进程和线程，并不是每种只有一个，比如渲染进程就有多个，每个选项卡都有自己的渲染进程。有时候我们使用Chrome会遇到某个选项卡崩溃或者没有响应的情况，这个选项卡对应的渲染进程可能就崩溃了，但是其他选项卡并没有用这个渲染进程，他们有自己的渲染进程，所以其他选项卡并不会受影响。")])]),t._v(" "),v("p",[t._v("既然JS是单线程的，那么诸如onclick回调，setTimeout，Ajax这些都是怎么实现的呢？是因为浏览器或node（宿主环境）是多线程的，即浏览器搞了几个其他线程去辅助JS线程的运行。")]),t._v(" "),v("p",[t._v("浏览器有很多线程，例如：(1、2、4为常驻线程)")]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("GUI 渲染线程")])]),t._v(" "),v("li",[v("strong",[t._v("JS 引擎线程")])]),t._v(" "),v("li",[t._v("定时器触发线程 (setTimeout)")]),t._v(" "),v("li",[v("strong",[t._v("浏览器事件线程 (onclick)")])]),t._v(" "),v("li",[t._v("http 异步线程")]),t._v(" "),v("li",[t._v("EventLoop轮询处理线程")]),t._v(" "),v("li",[t._v("...")])]),t._v(" "),v("h3",{attrs:{id:"_2-1-线程与进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-线程与进程"}},[t._v("#")]),t._v(" 2.1 线程与进程")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("进程")]),t._v("：一个进程就是在运行一个程序，比如用浏览器打开一个网页，这就是开启了一个进程；")]),t._v(" "),v("li",[v("strong",[t._v("线程")]),t._v("：多个"),v("strong",[t._v("线程")]),t._v("配合"),v("strong",[t._v("进程")]),t._v("运行。\n"),v("ol",[v("li",[t._v("GUI 渲染线程")]),t._v(" "),v("li",[t._v("JS 引擎线程")]),t._v(" "),v("li",[t._v("EventLoop轮询处理线程")]),t._v(" "),v("li",[t._v("其他线程，有 定时器触发线程 (setTimeout)、http 异步线程、浏览器事件线程 (onclick)等等。")])])])]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"title"},[t._v("注意")]),v("p",[t._v("js语言设定 "),v("strong",[t._v("js引擎")]),t._v(" 与 "),v("strong",[t._v("GUI引擎")]),t._v(" 是互斥的，也就是说GUI引擎在渲染时会阻塞js引擎计算。原因很简单，如果在GUI渲染的时候，js改变了dom，那么就会造成渲染不同步。")])]),v("h4",{attrs:{id:"_1-js-引擎线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-js-引擎线程"}},[t._v("#")]),t._v(" (1) JS 引擎线程")]),t._v(" "),v("p",[t._v("JS 引擎线程，我们把它称为 "),v("strong",[t._v("主线程")]),t._v(" ，用于执行JS同步代码（不包括异步代码，异步代码会交给其他线程执行）")]),t._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("div",{staticClass:"highlight-lines"},[v("div",{staticClass:"highlighted"},[t._v(" ")]),v("br"),v("br"),v("div",{staticClass:"highlighted"},[t._v(" ")]),v("br")]),v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br")])]),v("p",[t._v("主线程运行JS代码时，会生成个执行栈，可以处理函数的嵌套，这里将来在js执行上下文再学习介绍。")]),t._v(" "),v("h4",{attrs:{id:"_2-其他线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-其他线程"}},[t._v("#")]),t._v(" (2) 其他线程")]),t._v(" "),v("p",[t._v("JS代码中，碰到异步代码，就被放入相对应的线程中去执行。")]),t._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fun "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fun "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndom"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("onclick")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func "),v("span",{pre:!0,attrs:{class:"token constant"}},[t._v("C")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br")])]),v("ul",[v("li",[t._v("主线程在运行这段代码时，碰到setTimeout(fun A)，把这行代码交给 "),v("strong",[t._v("定时器触发线程")]),t._v(" 去执行 "),v("strong",[t._v("（定时器触发线程在接收到代码时就开始计时，时间到了将回调函数扔进队列。）")]),t._v("；")]),t._v(" "),v("li",[t._v("碰到ajax(fun B)，把这行代码交给 "),v("strong",[t._v("http 异步线程")]),t._v(" 去执行 "),v("strong",[t._v("（http 异步线程立即发起http请求，请求成功后将回调函数扔进队列）")]),t._v("；")]),t._v(" "),v("li",[t._v("碰到dom.onclick(func C) ，把这行代码交给 "),v("strong",[t._v("浏览器事件线程")]),t._v(" 去执行 "),v("strong",[t._v("（浏览器事件线程会先监听dom，直到dom事件被触发了，才将回调函数扔进队列）")]),t._v("。")])]),t._v(" "),v("p",[t._v("所以，这几个线程主要干两件事：")]),t._v(" "),v("ol",[v("li",[t._v("执行主线程扔过来的异步代码")]),t._v(" "),v("li",[t._v("保存着回调函数，异步代码执行成功后，通知 "),v("strong",[t._v("EventLoop轮询处理线程")]),t._v(" 过来取相应的回调函数")])]),t._v(" "),v("p",[t._v("异步代码执行成功后，其回调函数会被放入一个"),v("strong",[t._v("消息队列")]),t._v("（可以理解为一个静态的队列存储结构，非线程，只做存储，里面存的是一堆异步成功后的回调函数，先成功的异步回调函数在队列的前面，后成功的在后面）中，而不是一开始就把所有异步的回调函数扔进队列。比如setTimeout 3秒后执行一个函数，那么这个函数是在3秒后才进队列的。")]),t._v(" "),v("h4",{attrs:{id:"_3-eventloop轮询处理线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-eventloop轮询处理线程"}},[t._v("#")]),t._v(" (3) EventLoop轮询处理线程")]),t._v(" "),v("p",[t._v("主线程用于处理同步代码，其他线程用于处理异步代码，消息队列存储着异步成功后的回调函数，这三者的互相交流沟通通过EventLoop轮询处理线程完成。")]),t._v(" "),v("p",[t._v("具体过程如下图：\n"),v("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/20220104125619.png",alt:""}})]),t._v(" "),v("ol",[v("li",[t._v("整个的流程是循环往复的。")]),t._v(" "),v("li",[t._v("只有主线程的同步代码都执行完了，才会去队列里查询是否还有需要执行的代码。")])]),t._v(" "),v("p",[t._v("如果有很多个回调函数，而且主线程的代码复杂，执行时间较长，那么队列里的函数就排着队，等主线程执行完了再执行。由此，对于setTimeout，setInterval的定时，不一定完全按照设想的时间来执行。")]),t._v(" "),v("h3",{attrs:{id:"_2-2-宏任务与微任务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-宏任务与微任务"}},[t._v("#")]),t._v(" 2.2 宏任务与微任务")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/202204041006892.png",alt:""}})]),t._v(" "),v("p",[t._v("事件队列里面的事件还可以分两类：宏任务和微任务。")]),t._v(" "),v("ul",[v("li",[t._v("微任务拥有更高的优先级，当事件循环遍历队列时，先检查微任务队列，如果里面有任务，就全部拿来执行，执行完之后再执行一个宏任务。")]),t._v(" "),v("li",[t._v("执行每个宏任务之前都要检查下微任务队列是否有任务，如果有，优先执行微任务队列。")])]),t._v(" "),v("p",[t._v("（1）常见宏任务有：")]),t._v(" "),v("ul",[v("li",[t._v("script (可以理解为外层同步代码)")]),t._v(" "),v("li",[t._v("setTimeout/setInterval")]),t._v(" "),v("li",[t._v("setImmediate(Node.js)")]),t._v(" "),v("li",[t._v("I/O")]),t._v(" "),v("li",[t._v("UI事件")]),t._v(" "),v("li",[t._v("postMessage")])]),t._v(" "),v("p",[t._v("（2）常见微任务有：")]),t._v(" "),v("ul",[v("li",[t._v("Promise")]),t._v(" "),v("li",[t._v("process.nextTick(Node.js)")]),t._v(" "),v("li",[t._v("Object.observe")]),t._v(" "),v("li",[t._v("MutaionObserver")])]),t._v(" "),v("h2",{attrs:{id:"_3-ecmascript标准"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-ecmascript标准"}},[t._v("#")]),t._v(" 3 ECMAScript标准")]),t._v(" "),v("p",[t._v("ECMA是欧洲计算机制造商协会（European Computer Manufacturers Association）的简称，而 ECMAScript 是一种由 Ecma 国际在标准 "),v("strong",[t._v("ECMA-262")]),t._v(" 中定义的 "),v("strong",[t._v("脚本语言")]),t._v(" 规范。")]),t._v(" "),v("h3",{attrs:{id:"_3-1-ecma-262"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-ecma-262"}},[t._v("#")]),t._v(" 3.1 ECMA-262")]),t._v(" "),v("p",[t._v("ECMA-262 就是 ECMA 262 号标准，具体就是指 ECMAScript 遵照的标准。1996 年 11 月，网景公司将 JavaScript 提交给 Ecma 国际进行标准化。ECMA-262 的第一个版本于 1997 年 6 月被 Ecma 国际采纳。")]),t._v(" "),v("blockquote",[v("p",[t._v("查看最新最全的Ecma标准，可以去其"),v("a",{attrs:{href:"https://www.ecma-international.org/publications-and-standards/standards/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),v("OutboundLink")],1),t._v("查看")])]),t._v(" "),v("h3",{attrs:{id:"_3-2-es6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-es6"}},[t._v("#")]),t._v(" 3.2 ES6")]),t._v(" "),v("p",[t._v("到 "),v("strong",[t._v("2015")]),t._v(" 年，Ecma国际一共发布了在标准 ECMA-262 中定义的ECMAScript脚本语言规范（ "),v("strong",[t._v("1、2、3、4、5、5.1、6 共 7 个版本")]),t._v("，其中 4 被废弃）。")]),t._v(" "),v("p",[t._v("我们常把 5.1 之前的 ECMAScript 版本统称做 ES5，将 6 版本之后的版本统称做 ES6（因为从 2015 年起，ECMAScript 终于步入正轨，每年发布一次版本，到了 2021 年，已经发布了 6 个版本了，实在太多，所以用变革了 JavaScript 时代的 ES6 作为后续版本的代称）。")]),t._v(" "),v("p",[t._v("划重点，Web 前端招聘的 JD 中，经常出现的 "),v("strong",[t._v("ES6，不仅仅是 ES2015 这个版本，而是指代 ES2015 和其后每年发布的 ECMAScript 版本")]),t._v("。")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("版本")]),t._v(" "),v("th",[t._v("版本全称")]),t._v(" "),v("th",[t._v("版本别称")]),t._v(" "),v("th",[t._v("发布日期")]),t._v(" "),v("th",[t._v("简介")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[t._v("ECMAScript 1")]),t._v(" "),v("td",[t._v("EST")]),t._v(" "),v("td",[t._v("1997年6月")]),t._v(" "),v("td",[t._v("首版")])]),t._v(" "),v("tr",[v("td",[t._v("2")]),t._v(" "),v("td",[t._v("ECMAScript 2")]),t._v(" "),v("td",[t._v("ES2")]),t._v(" "),v("td",[t._v("1998年6月")]),t._v(" "),v("td",[t._v("格式修正，以使得其形式与 ISO/EC16262国际标准一致")])]),t._v(" "),v("tr",[v("td",[t._v("3")]),t._v(" "),v("td",[t._v("ECMAScript 3")]),t._v(" "),v("td",[t._v("ES3")]),t._v(" "),v("td",[t._v("1999年12月")]),t._v(" "),v("td",[t._v("强大的正则表达式，更好的词法作用域链处理，新的控制指令，异常处理，错误定义更加明确，数据输出的格式化及其它改变")])]),t._v(" "),v("tr",[v("td",[t._v("4")]),t._v(" "),v("td",[t._v("ECMAScript 4")]),t._v(" "),v("td",[t._v("ES4")]),t._v(" "),v("td",[t._v("放弃")]),t._v(" "),v("td",[t._v("由于关于语言的复杂性出现分歧，第4版本被放弃，其中的部分成为了第5版本及 Harmony的基础")])]),t._v(" "),v("tr",[v("td",[t._v("5")]),t._v(" "),v("td",[t._v("ECMAScript 5")]),t._v(" "),v("td",[t._v("ES5")]),t._v(" "),v("td",[t._v("2009年12月")]),t._v(" "),v("td",[t._v("新増“严格模式”，一个子集用作提供更彻底的错误检查，以避免结构出错。澄清了许多第3版本的模糊规范，并适应了与规范不一致的真实世界实现的行为。增加了部分新功能，如 getters 及 setters，支持JSON以及在对象属性上更完整的反射")])]),t._v(" "),v("tr",[v("td",[t._v("5.1")]),t._v(" "),v("td",[t._v("ECMAScript 5.1")]),t._v(" "),v("td",[t._v("ES5.1")]),t._v(" "),v("td",[t._v("2011年6月")]),t._v(" "),v("td",[t._v("ECMAScript5.1版形式上完全一致于国际标准ISO/EC16262:2011")])]),t._v(" "),v("tr",[v("td",[t._v("6")]),t._v(" "),v("td",[t._v("ECMAScript 6")]),t._v(" "),v("td",[t._v("ES6、ECMAScript2015、ES2015")]),t._v(" "),v("td",[t._v("2015年6月")]),t._v(" "),v("td",[t._v("第6版，添加了类和模块的语法，其他特性包括送代器，生成器和生成器表达式，箭头函数，二进制数据，静态类型数组，集合， promise, reflection和proxies。作为最早的 Ecmascript Harmony版本，也被叫做ES6 Harmony")])]),t._v(" "),v("tr",[v("td",[t._v("7")]),t._v(" "),v("td",[t._v("ECMAScript 7")]),t._v(" "),v("td",[t._v("ES7、 ECMAScript2016、ES2016")]),t._v(" "),v("td",[t._v("2016年6月")]),t._v(" "),v("td",[t._v("第7版，多个新的概念和语言特性")])]),t._v(" "),v("tr",[v("td",[t._v("8")]),t._v(" "),v("td",[t._v("ECMAScript 8")]),t._v(" "),v("td",[t._v("ES8、 ECMAScript2017、ES2017")]),t._v(" "),v("td",[t._v("2017年6月")]),t._v(" "),v("td",[t._v("第8版，多个新的概念和语言特性")])]),t._v(" "),v("tr",[v("td",[t._v("9")]),t._v(" "),v("td",[t._v("ECMAScript 9")]),t._v(" "),v("td",[t._v("ES9、 ECMAScript2018、ES2018")]),t._v(" "),v("td",[t._v("2018年6月")]),t._v(" "),v("td",[t._v("第9版，包含了异步循环，生成器，新的正则表达式特性和 rest/spread语法。")])]),t._v(" "),v("tr",[v("td",[t._v("10")]),t._v(" "),v("td",[t._v("ECMAScript 10")]),t._v(" "),v("td",[t._v("ES10, ECMAScript2019, ES2019")]),t._v(" "),v("td",[t._v("2019年6月")]),t._v(" "),v("td",[t._v("第10版")])]),t._v(" "),v("tr",[v("td",[t._v("11")]),t._v(" "),v("td",[t._v("ECMAScript 11")]),t._v(" "),v("td",[t._v("ES11、 ECMAScript2020、ES2020")]),t._v(" "),v("td",[t._v("2020年6月")]),t._v(" "),v("td",[t._v("第11版")])]),t._v(" "),v("tr",[v("td",[t._v("12")]),t._v(" "),v("td",[t._v("ECMAScript 12")]),t._v(" "),v("td",[t._v("ES12, ECMAScript2021, ES2021")]),t._v(" "),v("td",[t._v("2021年6月")]),t._v(" "),v("td",[t._v("第12版")])])])]),t._v(" "),v("h3",{attrs:{id:"_3-3-tc39-进程和-stage-x"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-tc39-进程和-stage-x"}},[t._v("#")]),t._v(" 3.3 TC39 进程和 Stage X")]),t._v(" "),v("p",[t._v("TC39 进程就是 TC39 组织发布的一个进程：")]),t._v(" "),v("ul",[v("li",[t._v("ECMAScript 功能设计与每年的 ECMAScript 版本发布独立，使用不同阶段（Stage）来区分功能的状态，共 5 个阶段，从 Stage 0（strawman）开始，到 Stage 4 （finished）结束。")]),t._v(" "),v("li",[t._v("越往后的阶段，需要原型实现和真机测试，可以建立设计和实现之间的反馈机制。")]),t._v(" "),v("li",[t._v("ECMAScript 版本"),v("strong",[t._v("每年发布一次")]),t._v("，发布的内容包含在 "),v("strong",[t._v("release deadline")]),t._v(" 之前的全部到达 "),v("strong",[t._v("Stage 4")]),t._v(" 的功能。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/KaiFengGuan/imgs/main/20220106102632.png",alt:""}})]),t._v(" "),v("ul",[v("li",[t._v("Stage 0：代号“稻草人（strawman）”，草案阶段")]),t._v(" "),v("li",[t._v("Stage 1：代号“提案（proposal）”， TC39 帮助阶段")]),t._v(" "),v("li",[t._v("Stage 2：代号“草案（draft）”， 本阶段很有可能成为标准")]),t._v(" "),v("li",[t._v("Stage 3：代号“候选（candidate）”， 已完成，需要从实现中获得反馈")]),t._v(" "),v("li",[t._v("Stage 4：代号“结束（finished）”， 准备成为标准")])]),t._v(" "),v("br"),t._v(" "),v("br"),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("参考链接")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.bilibili.com/video/BV1x441167iH",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript深度指南"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.cn/post/6844903593875603464",target:"_blank",rel:"noopener noreferrer"}},[t._v("主流浏览器内核及JS引擎"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.jianshu.com/p/8821c6432fe1",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底明白JS线程"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/367249029",target:"_blank",rel:"noopener noreferrer"}},[t._v("全网最全 ECMAScript 攻略"),v("OutboundLink")],1)])])])])}),[],!1,null,null,null);_.default=s.exports}}]);